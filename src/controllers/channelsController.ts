/**
 * Dialox Api ImamLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { string } from '../schema';
import { BaseController } from './baseController';

export class ChannelsController extends BaseController {
  /**
   * @param workspaceId
   * @return Response from the API call
   */
  async getChannelWhatsappIntegration(
    workspaceId: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('GET');
    req.baseUrl('Server 1');
    const mapped = req.prepareArgs({ workspaceId: [workspaceId, string()] });
    req.appendTemplatePath`/workspaces/${mapped.workspaceId}/channels/whatsapp`;
    return req.call(requestOptions);
  }

  /**
   * @param workspaceId
   * @return Response from the API call
   */
  async getChannelInstagram(
    workspaceId: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('GET');
    req.baseUrl('Server 1');
    const mapped = req.prepareArgs({ workspaceId: [workspaceId, string()] });
    req.appendTemplatePath`/workspaces/${mapped.workspaceId}/channels/instagram`;
    return req.call(requestOptions);
  }

  /**
   * @param workspaceId
   * @param id
   * @return Response from the API call
   */
  async getAllChannelIntegrationWhatsappByChannel(
    workspaceId: string,
    id: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('GET');
    req.baseUrl('Server 1');
    const mapped = req.prepareArgs({
      workspaceId: [workspaceId, string()],
      id: [id, string()],
    });
    req.appendTemplatePath`/workspaces/${mapped.workspaceId}/channels/whatsapp/${mapped.id}/channel`;
    return req.call(requestOptions);
  }

  /**
   * @param workspaceId
   * @param id
   * @return Response from the API call
   */
  async syncChannelToMeta(
    workspaceId: string,
    id: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('PATCH');
    req.baseUrl('Server 1');
    const mapped = req.prepareArgs({
      workspaceId: [workspaceId, string()],
      id: [id, string()],
    });
    req.appendTemplatePath`/workspaces/${mapped.workspaceId}/channels/whatsapp/${mapped.id}/channel`;
    return req.call(requestOptions);
  }
}
